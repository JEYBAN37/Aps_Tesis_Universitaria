# Generated by Django 5.0.2 on 2024-02-10 02:35

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChannelEntity',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('type', models.CharField(max_length=250)),
                ('campus', models.CharField(max_length=15)),
                ('telephone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FamilyContext',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('younger', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('pregnant', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('senior', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('victim', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('disable', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('patient', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('infected_person', models.IntegerField(choices=[('1', 'TP'), ('2', 'Lepra'), ('3', 'Escabiosis, enfermedades infecciosas en la piel u otras'), ('4', 'Malaria'), ('5', 'Dengue'), ('6', 'Changas'), ('7', 'Epatitis A'), ('8', 'Algunas enfermedades hinmunoprevenible')])),
                ('event_noted', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('vulneravility', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('risk_psychosocial', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('antecedent_salud', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('antecedent', models.CharField(blank=True, max_length=50, null=True)),
                ('source_food', models.IntegerField(choices=[('1', 'Cultiva'), ('2', 'Cria de animales'), ('3', 'Caseria'), ('4', 'Recoleccion de alimentos'), ('5', 'Trueque o intercambio'), ('6', 'Compra'), ('7', 'Asistencia del estado'), ('8', 'Ayuda humanitaria'), ('9', 'null')])),
                ('healthy_habits', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('socioemotional', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('environment_care', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('healthy_relationships', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('health_support', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('senior_protection', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('family_welfare', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('scl_conservation', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('recognition_rights', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
            ],
        ),
        migrations.CreateModel(
            name='Housing',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('home_type', models.IntegerField(choices=[('1', 'Casa'), ('2', 'Casa indigena'), ('3', 'Carpa'), ('4', 'Apartamento'), ('5', 'Pieza/Cuarto en Inclinato'), ('6', 'Contenedor'), ('7', 'Embarcacion'), ('8', 'Vagon'), ('9', 'Refugio Natural'), ('10', 'Cueva'), ('11', 'Puente'), ('12', 'Otro')])),
                ('ht_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('structural_material', models.IntegerField(choices=[('1', 'Bloque, ladrillo, piedra, madera pulida'), ('2', 'Tapia pisada, adobe'), ('3', 'Bahareque'), ('4', 'Material prefabricado'), ('5', 'Madera burda, tabla, tablón'), ('6', 'Guadua, casa, esterilla, otro vegetal'), ('7', 'Zinc, tela, lona, cartón, latas, desechos, plástico'), ('8', 'Otro'), ('9', 'Sin pared')])),
                ('sm_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('floor_material', models.IntegerField(choices=[('1', 'Alfombra o tapete, mármol, parque, madera pulida y lacada'), ('2', 'Baldosa, vinilo, tableta, ladrillo'), ('3', 'Cemento, gravilla'), ('4', 'Madera burda, madera en mal estado, tabla, tablón'), ('5', 'Tierra o arena'), ('6', 'Otro')])),
                ('fm_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('roofing_material', models.IntegerField(choices=[('1', 'Concreto'), ('2', 'Teja de Barro'), ('3', 'Fibrocemento'), ('4', 'Zinc'), ('5', 'Palma o Paja'), ('6', 'Plastico'), ('7', 'Desechos (cartón, lata, tela, sacos, etc)'), ('8', 'Otro')])),
                ('rm_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('bedrooms', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('overcrowding', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('irrigation_scenarios', models.IntegerField(choices=[('1', 'Concreto'), ('2', 'Teja de Barro'), ('3', 'Fibrocemento'), ('4', 'Zinc'), ('5', 'Palma o Paja'), ('6', 'Plastico'), ('7', 'Desechos (cartón, lata, tela, sacos, etc)'), ('8', 'Otro'), ('9', 'Otro')])),
                ('access', models.IntegerField(choices=[('1', '///'), ('2', '///'), ('3', '///'), ('4', '///'), ('5', '///')])),
                ('food_source', models.IntegerField(choices=[('1', 'Concreto'), ('2', 'Teja de Barro'), ('3', 'Fibrocemento'), ('4', 'Zinc'), ('5', 'Palma o Paja'), ('6', 'Plastico'), ('7', 'Desechos (cartón, lata, tela, sacos, etc)'), ('8', 'Otro')])),
                ('fs_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('transmitting_vectors', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('tv_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('outdoor_environments', models.IntegerField(choices=[('1', 'Concreto'), ('2', 'Teja de Barro'), ('3', 'Fibrocemento'), ('4', 'Zinc'), ('5', 'Palma o Paja'), ('6', 'Plastico'), ('7', 'Desechos (cartón, lata, tela, sacos, etc)'), ('8', 'Otro'), ('9', 'Concreto'), ('10', 'Teja de Barro'), ('11', 'Fibrocemento'), ('12', 'Zinc'), ('13', 'Palma o Paja'), ('14', 'Concreto'), ('15', 'Teja de Barro'), ('16', 'Fibrocemento'), ('17', 'Zinc'), ('18', 'Palma o Paja'), ('19', 'Plastico')])),
                ('oe_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('economic_activities', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('animals', models.IntegerField(choices=[('1', 'Concreto'), ('2', 'Teja de Barro'), ('3', 'Fibrocemento'), ('4', 'Zinc'), ('5', 'Palma o Paja'), ('6', 'Plastico'), ('7', 'Desechos (cartón, lata, tela, sacos, etc)'), ('8', 'Otro'), ('9', 'Concreto'), ('10', 'Teja de Barro'), ('11', 'Fibrocemento'), ('12', 'Zinc'), ('13', 'Palma o Paja')])),
                ('a_descripcion', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pollster',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('last_name', models.CharField(max_length=250)),
                ('id', models.CharField(max_length=15)),
                ('telephone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('job', models.CharField(max_length=30)),
                ('role', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Representative',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('last_name', models.CharField(max_length=250)),
                ('id', models.CharField(max_length=15)),
                ('telephone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('job', models.CharField(max_length=30)),
                ('role', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Welfare',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('tenure', models.IntegerField(choices=[('1', 'Propia'), ('2', 'Propia Pagando'), ('3', 'Anticresis'), ('4', 'Arriendo'), ('5', 'Subarriendo'), ('6', 'Prestada sin costo')])),
                ('time_residence', models.CharField(max_length=250)),
                ('permanence', models.IntegerField(choices=[('1', 'Permanente'), ('2', 'Permanece Fuera de la ciudad'), ('3', 'Sin dato')])),
                ('lgtbi', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('life_style', models.IntegerField(choices=[('1', 'Sedenatrismo'), ('2', 'Actividad Fisica'), ('3', 'Consumo de cigarrillo'), ('4', 'Consumo de Acohol'), ('5', 'Consumo de otras SPA'), ('6', 'Inadecuadas Prácticas alimentarias y nutricionales')])),
                ('alternative_health', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
            ],
        ),
        migrations.CreateModel(
            name='InfoGeneral',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('departament', models.CharField(blank=True, max_length=150, null=True)),
                ('home_location', models.CharField(blank=True, max_length=150, null=True)),
                ('estratum', models.IntegerField(choices=[('1', 'Bajo bajo'), ('2', 'Bajo'), ('3', 'Medio-bajo'), ('4', 'Medio'), ('5', 'Medio-alto'), ('6', 'Alto')])),
                ('households', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('num_families', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('people', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('housing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='aps_api.housing')),
                ('pollster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aps_api.pollster')),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('family_type', models.IntegerField(choices=[('1', 'Nuclear biparental'), ('2', 'Nuclear monoparental'), ('3', 'Extenso biparental'), ('4', 'Extenso monoparental'), ('5', 'Compuesto biparental'), ('6', 'Compuesto monoparental'), ('7', 'Uniparental')])),
                ('num_member', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('family_graphic', models.ImageField(blank=True, null=True, upload_to='imagenes/')),
                ('apgar', models.IntegerField(choices=[('1', 'Normal'), ('2', 'Disfuncion leve'), ('3', 'Disfuncion moderada'), ('4', 'Disfuncion severa')])),
                ('carer', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('zarit', models.IntegerField(choices=[('1', 'Ausencia de sobrecarga'), ('2', 'Sobrecarga ligera'), ('3', 'Sobrecarga intensa')])),
                ('ecomapa', models.IntegerField(choices=[('1', 'Positivo'), ('2', 'Tenue'), ('3', 'Estresante'), ('4', 'Fluye'), ('5', 'Intenso')])),
                ('family_context', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='aps_api.familycontext')),
                ('info_general', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aps_api.infogeneral')),
                ('welfare', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='aps_api.welfare')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('last_name', models.CharField(max_length=250)),
                ('age', models.CharField(max_length=2)),
                ('date_birth', models.DateTimeField(auto_now_add=True)),
                ('type_id', models.CharField(choices=[('CC', 'Cedula de ciudadania'), ('CD', 'Carnet diplomatico'), ('CE', 'Cedula extranjera'), ('MS', 'Menor sin identificaicon'), ('CN', 'Certificado de Nacido vivo'), ('PA', 'Pasaporte'), ('PE', 'Permiso especial de permanencia'), ('PT', 'Permiso de proteccion temporal'), ('RC', 'Registro civil'), ('TI', 'Tarjeta de identidad')], max_length=15)),
                ('id', models.CharField(max_length=15)),
                ('sex', models.IntegerField(choices=[('1', 'Hombre'), ('2', 'Mujer'), ('3', 'Indeterminado')])),
                ('role', models.IntegerField(choices=[('1', 'Jefe(a) de Familia'), ('2', 'Conyuge o Compañero(a)'), ('3', 'Hijo'), ('4', 'Hermano'), ('5', 'Padre o Madre'), ('6', 'Otros')])),
                ('weight', models.CharField(max_length=5)),
                ('size', models.CharField(max_length=5)),
                ('affiliation_regime', models.CharField(max_length=5)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aps_api.family')),
            ],
        ),
        migrations.CreateModel(
            name='Pipelines',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('channel', models.CharField(max_length=150)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aps_api.channelentity')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aps_api.member')),
            ],
        ),
        migrations.AddField(
            model_name='channelentity',
            name='representative',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aps_api.representative'),
        ),
        migrations.CreateModel(
            name='Sanation',
            fields=[
                ('serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('source_supply', models.IntegerField(choices=[('1', 'Concreto'), ('2', 'Teja de Barro'), ('3', 'Fibrocemento'), ('4', 'Zinc'), ('5', 'Palma o Paja'), ('6', 'Plastico'), ('7', 'Desechos (cartón, lata, tela, sacos, etc)'), ('8', 'Otro'), ('9', 'Concreto'), ('10', 'Teja de Barro'), ('11', 'Fibrocemento'), ('12', 'Zinc'), ('13', 'Palma o Paja')])),
                ('ss_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('disposal_system', models.IntegerField(choices=[('1', 'Concreto'), ('2', 'Teja de Barro'), ('3', 'Fibrocemento'), ('4', 'Zinc'), ('5', 'Palma o Paja'), ('6', 'Plastico'), ('7', 'Desechos (cartón, lata, tela, sacos, etc)'), ('8', 'Otro')])),
                ('ds_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('Wastewater', models.IntegerField(choices=[('1', 'Concreto'), ('2', 'Teja de Barro'), ('3', 'Fibrocemento'), ('4', 'Zinc'), ('5', 'Palma o Paja'), ('6', 'Plastico'), ('7', 'Desechos (cartón, lata, tela, sacos, etc)')])),
                ('w_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('Solid_waste', models.IntegerField(choices=[('1', 'Concreto'), ('2', 'Teja de Barro'), ('3', 'Fibrocemento'), ('4', 'Zinc'), ('5', 'Palma o Paja'), ('6', 'Plastico')])),
                ('sw_descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('hygiene', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('hygiene_food', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('cleanliness', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('handwashing', models.IntegerField(choices=[('1', 'Si'), ('2', 'No')])),
                ('hygiene_elements', models.IntegerField(choices=[('1', 'Cepillo de diente'), ('2', 'Máquina de afeitar'), ('3', 'Toallas'), ('4', 'No'), ('5', 'No refiere'), ('6', 'Sin dato')])),
                ('brushed', models.IntegerField(choices=[('1', 'Cepillo y crema dental'), ('2', 'Ademas Ceda dental'), ('3', 'No'), ('4', 'No refiere'), ('5', 'Sin dato')])),
                ('housing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='aps_api.housing')),
            ],
        ),
    ]
